 char ch,OK1;
 extern float W7,W4,W87,W86,W110, W120, DX[100], DY[100];
 extern float W10,W11,W12,W70,W101,W111,Lange,AngleGr,AngleRad;
 extern float udl,x1,y1,x2,y2,tp,x3,y3,xt,yt;
 extern float XFrom,YFrom;
 extern long Sposob;
 extern float NextPx,NextPy;
 extern long W100;
 extern long pin;
 extern float pinok;
 extern long npodpr;
 extern char Fik;
 extern long shag;
 float xtb,ytb; 
 extern long undos[500];
 extern float Ygol1[100],Ygol2[100];
 float  an,Temp,KolSpan,PosSpan,sp1,sp2;
 float cons,xc,yc,xd,yd,rc,anor,atang,rc1;
 long    Adres,ppod;
 long kadr,Topik,zikl;
 kadr=0;
 npodpr=0;
 udl=0;
 OK1='Y';
 while(kadr!=1)
 {
//  udl=0;
  if(Fik!='Y')
   {
   print("-”кажите точку вpезки(правая компенсация) P-начало подпрог, ESC- выход ");
   W(-1);
   print("                                                                      ");
   if (S_GETCH==27)
    {
     ppkon();
     break; /* нажата клавиша ESC */
    }
   if (S_GETCH==80) ppod=1;     // начало подпрограммы
   xt=HEAP[22];     // точка курсора -врезка
   yt=HEAP[21];     // точка курсора -врезка
   LINEM(xt,yt,W111);
   udl++;
 }
 if(Fik!='Y')
   print("-”кажите контуp(CR-резка,(D)-удаление,(P)-пп.,K-косой рез,ESC-выход");
 else
   print("-”кажите контуp(CR-резка,(P)-пп.,(D)-удаление,ESC-выход");
 W(-2);
 x1=HEAP[13];     // первая точка спана
 y1=HEAP[12];     // первая точка спана
 x2=HEAP[11];    // вторая точка спана
 y2=HEAP[10];    // вторая точка спана
 tp=HEAP[9];      // фактор кривизны
 x3=HEAP[22];     // ближайщая точка к спану
 y3=HEAP[21];     // ближайщая точка к спану
 W7=HEAP[3];
 W4=HEAP[4];
 KolSpan=HEAP[5];
 PosSpan=HEAP[8];
 W12=HEAP[8];     // ѕозиция на спане 0..1
 print("                                                                      ");
 if (S_GETCH==27)
  {
   if (Fik!='Y')
    {
     N(-1);
     D(1);
    }
   ppkon();
   break; /* нажата клавиша ESC */
  }
 if (S_GETCH==68) /* нажата клавиша D */
  {
   UDA1();
   continue;
  }
 udl=0;
 Topik=0;
 if ((S_GETCH==80) && (Fik=='Y')) /* нажата клавиша P */
  {
      Topik=89;
      print("Y- начало N -конец подпрограммы");
      print("                                                  ");
      print(" Ќачало подпрограммы([Y]/N)>");
      W(-1);
      print("                              ");
      if (S_GETCH>31) Topik=S_GETCH;
      if (S_GETCH=='N')
       {
        pin=0;
        W101=W100;
        TMARK(2,W101);
        udl++;
        break;
       }
  }
 if(Fik=='Y')
  {
   RAPID();
   MOVE (W7,Lange,W4,0,0);
   udl+=2;
  }
 W86=XCURR;
 W87=YCURR;
 OK1='Y';
 if ((Topik==89) || (ppod==1)) /* нажата буква P */
 {
   ppod=0;
   OK1='P';
   if(W100>=99)
     W100=0;
   W100=W100+1;
   npodpr++;
   W10=HEAP[16];
   W11=HEAP[15];
   W110=W86-W10;
   W120=W87-W11;
   DX[W100]=W110;
   DY[W100]=W120;
   W101=W100;
   TMARK(1,W101);
   K();
   pinok=HEAP[7];
   udl++;
   pin=1;
//          » щ е м   у г о л   п о в о p о т а
   NewFun(302,0,W7);
   Adres      := floor(HEAP[25]);
   Ygol1[W100]:= Heap[Adres+8];
   Ygol2[W100]:= Heap[Adres+9];
 }
 if (S_GETCH!=75) /* не нажата клавиша K */
 {
  x3=W86;
  y3=W87;
  if (Fik!='Y')
  W4=HEAP[17];
 }
 KR();
 LL();
 xtb=XCURR;
 ytb=YCURR;        
 if(Fik=='Y')
  PROF(W7,0,W4,0,0,W4,0,0.01);
 else
  PROF(W7,0,x1,y1,x1,y1);
 udl++;
 if (tp>0.001)
  {
    cons = ( tp-1./ tp)*0.25;
    xc = ( HEAP[13]+ HEAP[11])*0.5+( HEAP[10]- HEAP[12])*cons;
    yc = ( HEAP[12]+ HEAP[10])*0.5-( HEAP[11]- HEAP[13])*cons;
    xd =  HEAP[13]-xc;
    yd =  HEAP[12]-yc;
    rc = (xd*xd+yd*yd)**0.5;
    anor=3;
    atang=7;
    rc1=(anor*anor+atang*atang)/(2.0*anor);
    if (rc*0.9<rc1)
     {
      MOVE(W7,6,W4,-1.0,0);
      udl++;
     }
    else
     {
      if (Sposob==2 ||  Sposob==3)
       {
         MOVE(W7,10,W4,-1.0,0);
         udl++;
       }
     }
  }
 else
  {
    if (Fik=='Y')
     {
      if (Sposob==2 ||  Sposob==3)
       {
        MOVE(W7,10,W4,W12,0);
        udl++;
       }
     }
    else
     {
      if (Sposob==2 ||  Sposob==3)
       {
        MOVE(W7,10,W4,-1.0,0);
        udl++;
       }
     }
  }
 if (Sposob==0)
  {
   LINEM(xtb,ytb,0.0);
   udl++;      
  }                
 OFT();
 if ((S_GETCH=='P')&& (Fik!='Y')) /* если конец подпрограммы */
  {
   pin=0;
   W101=W100;
   TMARK(2,W101);
   udl++;
   break;
  }
 }
 UNDON();
 return;
