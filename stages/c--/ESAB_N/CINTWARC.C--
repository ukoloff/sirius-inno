/*Function IntWithArc(X1,Y1,X2,Y2,Tg:real; var Xi,Yi:PArray):byte;*/
/**********************************************************
ќписание: »щет точки пересечения горизонтальной
           линии, определяемой размером YStart
           c дугой, определяемой параметрами
           X1,Y1,X2,Y2,Tg и возвращает их
           в Xi1,Yi1,Xi2,Yi2

           «начение функции - число найденных точек

***********************************************************/
  extern float YStart,x1,y1,x2,y2,t1,Xi[2],Yi[2];
  extern long NPoint;
  extern float Xc,Yc,Xm,Ym,R;
  float  Xp[2],Yp[2];
  float  A,B,C,D,A1,B1,C1,D1;
  long    NInt,p,i,j;
  char   ch;
  NPoint:=0;
//» щ  е м   ц е н т р  и  р а д и у с  д у г и
  CSpan();
//ѕриводим дугу к уравнению окружности
  A:=1;
  B:=-2*Xc;
  C:=-2*Yc;
  D:=Xc**2+Yc**2-R**2;
//Ќаходим коэффициентны квадратного уравнения
  A1:=A;
  B1:=B;
  C1:=YStart**2+C*YStart+D;
//Ќаходим дискриминант квадратного уравнения
  D1:=B1**2-4*A1*C1;
//Ќ а х о д и м  ч и с л о  к о р н е й
  if(D1<0) return;   //–ешения нет
  Xp[0]:=(-B1+D1**0.5)/2/A1;
  Xp[1]:=(-B1-D1**0.5)/2/A1;
  Yp[0]:=YStart;
  Yp[1]:=YStart;
//≈сли точки лежат очень близко, то одно решение
  if(Abs(D1)<0.0001)
    NInt:=1;
  else
    NInt:=2;
//ќпределяем принадлежность точек пересечения дуге
  j:=0;
  for(i=0;i<NInt;i++)
  {
    wtbm(x1,y1,x2,y2,Xp[i],Yp[i],p);
    if((p==1 && t1>0.0) || (p==0 && t1<0.0))
    {
      Xi[j]:=Xp[i];
      Yi[j]:=Yp[i];
      j++;
    }
  }
  NPoint:=j;
//end IntWithArc
