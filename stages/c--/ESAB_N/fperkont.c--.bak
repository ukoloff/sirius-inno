  extern float W7,W4;
  extern float Lange;
  char   OK,OK1;
  float  W12;
  extern float Perx[1000];
  extern float Pery[1000];
  extern float PerKont[1000];
  extern long Fpoint;  
  float x1,y1,x2,y2,x3,y3,x4,y4,x5,y5,x6,y6,tp;
  float xb,xm,yb,ym,sd,dis2;
  float spann,posspn,dis,KolSpan,PosSpan;
  long pont,points;
  long i,ipriz,PerNapr;
  
  print("”кажите контур для резки с перемычкой,/ESC-выход)>");
  W(-2);
  x1=HEAP[13];     // первая точка спана
  y1=HEAP[12];     // первая точка спана
  x2=HEAP[11];    // вторая точка спана
  y2=HEAP[10];    // вторая точка спана
  tp=HEAP[9];      // фактор кривизны
  x3=HEAP[22];     // ближайщая точка к спану
  y3=HEAP[21];     // ближайщая точка к спану
  W7=HEAP[3];  // номер контура
  W4=HEAP[4];  // номер спана
  KolSpan=HEAP[5];  // количество спанов
  PosSpan=HEAP[8];  // позиция на спане
  W12=HEAP[8];     // ѕозиция на спане 0..1
  NEWFUN(320,0,W7);      // √јЅј–»“џ контура  W7
  xm=HEAP[56]; // нижняя граница по ’ детали заносится в элемент массива HEAP[56]
  xb=HEAP[57];  // верхняя граница по ’ в HEAP[57]
  ym=HEAP[58];  // нижняя граница по ” в HEAP[58]
  yb=HEAP[59];  // верхняя граница по ” в HEAP[59]
  sd=HEAP[60]; // площадь детали в HEAP[60]
  PerNapr=0;
  if ((xb-xm)>(yb-ym)) PerNapr=1; // длинная сторона детали c перемычками по оси ’
  else	 PerNapr=2; // длинная сторона детали с перемычками по оси Y

  MOVE (W7,Lange,W4,W12,0.0);
  x1=x3;
  y1=y3;
  x4=x3;
  y4=y3;
  OK1='P';
  if (OK1=='P') //  маркировка подпрограммы
   {
     OK1='P';
     nprog();
   }
  OK :='N';
  OK1:='P';
  pont=0;
  points=0;
  while(pont==0)
   {
     print("”кажите место следующей перемычки( " +str(points+1)+") /ESC-конец выбора )>");
     W(-2);
     if (S_GETCH==27) 
     	{ // заканчиваем профилирование
     		RAPID();
        MOVE(W7,7,spann,posspn,15);
        x1=XCURR;
        y1=YCURR;
        x3=x4;
        y3=y4;
        KL();
        LEAD(0); 
        PROF(W7,0,x1,y1,x3,y3);
        OFT();
        ppkon();
     	  break; 
      }
     points++;
     ipriz=0;
     if (Fpoint>0) //ƒля сопоставления пермычек между соседними деталями
     	{
     		for(i=0;i<Fpoint;i++)
        {
        	if (W7!=PerKont[i])
        		{
        			x5=Perx[i];
        			y5=Pery[i];
        			x3=HEAP[22];     // ближайщая точка к спану
              y3=HEAP[21];     // ближайщая точка к спану
        	    dis=((x5-x3)*(x5-x3)+(y5-y3)*(y5-y3))**0.5;	
        	    if (dis<35.0) // сопоставление точек врезки
        	   	{
        	   		NEWFUN(319,508,x5);
                NEWFUN(319,509,y5);
                NEWFUN(327,0,W7);
                spann=HEAP[115];   // Ќомер ближайшего спана;
                posspn=HEAP[116];  //  позиция на спане
                x6=HEAP[113];      //  оордината ’ ближайшей точки на контуре;
                y6=HEAP[114];      //  оордината ” ближайшей точки на контуре;
                ipriz=1;
                print("ƒистан=" +str(dis)+">");
        	      W(-1);
        	   	}
           }
     	  }
     	}
     	if (Fpoint>0) //ƒля сопоставления пермычек внутри одной детали
     	{
     		for(i=0;i<Fpoint;i++)
        {
        	if (W7==PerKont[i])
        		{
        			x5=Perx[i];
        			y5=Pery[i];
        			x3=HEAP[22];     // ближайщая точка к спану
              y3=HEAP[21];     // ближайщая точка к спану
        	    if (PerNapr==2)dis=abs(y5-y3);
        	    else dis=abs(x5-x3);	
        	    dis2=((x5-x3)*(x5-x3)+(y5-y3)*(y5-y3))**0.5;	
        	    if (dis<35.0 && dis2>35.0) // сопоставление точек врезки dis2 - убираем одинаковые точки
        	   	{
        	   		if (PerNapr==2)
        	   		{
        	   		  NEWFUN(319,508,x3);
                  NEWFUN(319,509,y5);
                 }
                else
                	{
                		NEWFUN(319,508,x5);
                    NEWFUN(319,509,y3);
                	} 
                NEWFUN(327,0,W7);
                spann=HEAP[115];   // Ќомер ближайшего спана;
                posspn=HEAP[116];  //  позиция на спане
                x6=HEAP[113];      //  оордината ’ ближайшей точки на контуре;
                y6=HEAP[114];      //  оордината ” ближайшей точки на контуре;
                ipriz=1;
           	    print("ƒистан=" +str(dis)+">");
          	    W(-1);

        	   	}
           }
     	  }
     	}
     if (ipriz==0)
     	{
        x3=HEAP[22];     // ближайщая точка к спану
        y3=HEAP[21];     // ближайщая точка к спану
      }
      else
     	{
     		x3=x6;
     		y3=y6;
     	}
//    print("¬ведите координату ’("+str(x3)+")");
//    read(x3);
     
     NEWFUN(319,508,x3);
     NEWFUN(319,509,y3);
     NEWFUN(327,0,W7);
     spann=HEAP[115];   // Ќомер ближайшего спана;
     posspn=HEAP[116];  //  позиция на спане
     x6=HEAP[113];      //  оордината ’ ближайшей точки на контуре;
     y6=HEAP[114];      //  оордината ” ближайшей точки на контуре;
     KL();
     LEAD(0); 
     PROF(W7,0,x1,y1,x3,y3);
     MOVE(W7,7,spann,posspn,0); 
     OFT();
     RAPID();
     MOVE(W7,7,spann,posspn,15);
     x1=XCURR;
     y1=YCURR; 
     Fpoint++;
     Perx[Fpoint-1]=x1;
     Pery[Fpoint-1]=y1;
     PerKont[Fpoint-1]=W7;
   }
BLOK();
return;

